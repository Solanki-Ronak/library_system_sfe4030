/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


package library.apt2080;
import java.awt.Component;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ronak
 */
public class Studentdeletereserved extends javax.swing.JFrame {

    /**
     
     */
    private String selectedImagePath;
    public Studentdeletereserved(String studentId) {
        initComponents();
        addTableSelectionListener();
        
        studentidnew.setText(studentId); 
        studentidnew.setEditable(false);
        studentidnew.setOpaque(false);
        displayReservedBooks();
        customizeComponents();
       
    }
    
    public String getBookId() {
    return bookid.getText();
}

public String getBookName() {
    return bookname.getText();
}

public String getCourseCode() {
    return coursecode.getText();
}

public String getAuthor() {
    return author.getText();
}
private void customizeComponents() {
        
        jButton1.setBackground(java.awt.Color.WHITE);
        jButton2.setBackground(java.awt.Color.WHITE);
         deletebook.setBackground(java.awt.Color.WHITE);
         reservetable.setBackground(java.awt.Color.WHITE);
        
        
    }
    public class ImageTableCellRenderer extends DefaultTableCellRenderer {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        if (value instanceof ImageIcon) {
            ImageIcon imageIcon = (ImageIcon) value;
            Image image = imageIcon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            ImageIcon scaledImageIcon = new ImageIcon(image);
            setIcon(scaledImageIcon);
            setText("");  // Set the text to an empty string for ImageIcon values
        } else {
            setIcon(null);
        }
        return cellComponent;
    }
}
    
    
    private void displayReservedBooks() {
     DefaultTableModel model = (DefaultTableModel) reservetable.getModel();
    model.setRowCount(0);

    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

        String query = "SELECT * FROM reserved";
        PreparedStatement statement = conn.prepareStatement(query);
        ResultSet rs = statement.executeQuery();

        while (rs.next()) {
            String bookID = rs.getString("bookid");
            String bookName = rs.getString("bookname");
            String courseCode = rs.getString("coursecode");
            String author = rs.getString("author");
            byte[] imageData = rs.getBytes("imageupload");

            ImageIcon imageIcon = new ImageIcon(imageData);
            Image image = imageIcon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            ImageIcon scaledImageIcon = new ImageIcon(image);

            model.addRow(new Object[]{bookID, bookName, courseCode, author, scaledImageIcon});
        }

        rs.close();
        statement.close();
        conn.close();
    } catch (SQLException ex) {
        Logger.getLogger(Studentdeletereserved.class.getName()).log(Level.SEVERE, null, ex);
    }
         selectedImagePath = null; // Reset the selected image path
        reservetable.getColumnModel().getColumn(4).setCellRenderer(new Studentdeletereserved.ImageTableCellRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        reservetable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        studentidnew = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        deletebook = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bookid = new javax.swing.JTextField();
        bookname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        coursecode = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(null);

        reservetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BOOK ID", "BOOK NAME", "COURSE CODE", "AUTHOR", "IMAGE"
            }
        ));
        reservetable.setRowHeight(130);
        jScrollPane3.setViewportView(reservetable);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 90, 806, 210);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\ronak\\OneDrive\\Desktop\\2.3\\APT2080\\images\\log (2).jpg")); // NOI18N
        jButton2.setText("SIGN OUT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(850, 500, 120, 30);

        jLabel3.setText("STUDENT ID:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(450, 0, 140, 20);

        studentidnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentidnewActionPerformed(evt);
            }
        });
        getContentPane().add(studentidnew);
        studentidnew.setBounds(575, 0, 71, 22);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(676, 0, 0, 0);

        deletebook.setIcon(new javax.swing.ImageIcon("C:\\Users\\ronak\\OneDrive\\Desktop\\2.3\\APT2080\\images\\delete (1).png")); // NOI18N
        deletebook.setText("DELETE A RESERVED BOOK");
        deletebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebookActionPerformed(evt);
            }
        });
        getContentPane().add(deletebook);
        deletebook.setBounds(300, 440, 250, 71);

        jLabel5.setText("BOOK ID:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 320, 90, 16);

        jLabel6.setText("BOOK NAME:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 380, 90, 16);

        bookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookidActionPerformed(evt);
            }
        });
        getContentPane().add(bookid);
        bookid.setBounds(170, 320, 71, 22);
        getContentPane().add(bookname);
        bookname.setBounds(170, 380, 71, 22);

        jLabel1.setText("COURSE CODE:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(310, 320, 110, 16);

        jLabel7.setText("AUTHOR:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(310, 380, 80, 16);

        coursecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursecodeActionPerformed(evt);
            }
        });
        getContentPane().add(coursecode);
        coursecode.setBounds(450, 320, 71, 22);
        getContentPane().add(author);
        author.setBounds(450, 380, 71, 22);

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ronak\\OneDrive\\Desktop\\2.3\\APT2080\\images\\3545435 (2).png")); // NOI18N
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(720, 500, 120, 30);

        jLabel8.setFont(new java.awt.Font("Rockwell Nova Light", 0, 24)); // NOI18N
        jLabel8.setText(" BOOKS RESERVED");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(230, 20, 390, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\ronak\\OneDrive\\Desktop\\2.3\\APT2080\\images\\background (1).jpg")); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-3, -4, 1060, 690);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Firstpage firstpage=new Firstpage();
        firstpage.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void studentidnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentidnewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentidnewActionPerformed

    private void coursecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursecodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursecodeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String studentId = studentidnew.getText(); // Get the student ID from the text field
    Studentfirstpage firstpage = new Studentfirstpage(studentId);
    firstpage.setVisible(true);
    dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deletebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebookActionPerformed
        // TODO add your handling code here:
        String studentID = studentidnew.getText();
    String bookID = bookid.getText();

    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

        // Delete the row from the reserved table
        String deleteQuery = "DELETE FROM reserved WHERE studentid = ? AND bookid = ?";
        PreparedStatement deleteStatement = conn.prepareStatement(deleteQuery);
        deleteStatement.setString(1, studentID);
        deleteStatement.setString(2, bookID);
        int rowsAffected = deleteStatement.executeUpdate();
        deleteStatement.close();

        if (rowsAffected > 0) {
            // Update the available column in the unreserved table
            String updateQuery = "UPDATE unreserved SET available = available + 1 WHERE bookid = ?";
            PreparedStatement updateStatement = conn.prepareStatement(updateQuery);
            updateStatement.setString(1, bookID);
            updateStatement.executeUpdate();
            updateStatement.close();

            JOptionPane.showMessageDialog(this, "Reserved book deleted successfully!");
            displayReservedBooks(); // Refresh the table
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete the reserved book. Please check the student ID and book ID.");
        }

        conn.close();
    } catch (SQLException ex) {
        Logger.getLogger(Studentdeletereserved.class.getName()).log(Level.SEVERE, null, ex);
    }

    bookid.setText("");
    bookname.setText("");
    coursecode.setText("");
    author.setText("");
    }//GEN-LAST:event_deletebookActionPerformed

    private void bookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookidActionPerformed
private void addTableSelectionListener() {
    reservetable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent event) {
            if (!event.getValueIsAdjusting()) {
                int selectedRow = reservetable.getSelectedRow();
                if (selectedRow != -1) {
                    String selectedBookID = (String) reservetable.getValueAt(selectedRow, 0);
                    String selectedBookName = (String) reservetable.getValueAt(selectedRow, 1);
                    String selectedCourseCode = (String) reservetable.getValueAt(selectedRow, 2);
                    String selectedAuthor = (String) reservetable.getValueAt(selectedRow, 3);

                    bookid.setText(selectedBookID);
                    bookname.setText(selectedBookName);
                    coursecode.setText(selectedCourseCode);
                    author.setText(selectedAuthor);
                }
            }
        }
    });
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Studentdeletereserved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Studentdeletereserved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Studentdeletereserved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Studentdeletereserved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String studentId = ""; // Set a default value if needed
                Studentdeletereserved studentFirstPage = new Studentdeletereserved(studentId);
                studentFirstPage.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JTextField bookid;
    private javax.swing.JTextField bookname;
    private javax.swing.JTextField coursecode;
    private javax.swing.JButton deletebook;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable reservetable;
    private javax.swing.JTextField studentidnew;
    // End of variables declaration//GEN-END:variables
}
